--- How Base64 Works ---
  > Base64 encoding takes the original binary data and operates on it by dividing it into tokens of three bytes. A byte consists of eight bits, so Base64 takes 24bits in     total. These 3 bytes are then converted into four printable characters from the ASCII standard.

    The first step is to take the three bytes (24bit) of binary data and split it into four numbers of six bits. Because the ASCII standard defines the use of seven bits,     Base64 only uses 6 bits (corresponding to 2^6 = 64 characters) to ensure the encoded data is printable and none of the special characters available in ASCII are used.     The algorithm's name Base64 comes from the use of these 64 ASCII characters. The ASCII characters used for Base64 are the numbers 0-9, the alphabets 26 lowercase and     26 uppercase characters plus two extra characters '+' and '/'.

    The ASCII conversion of 3-byte, 24-bit groups is repeated until the whole sequence of original data bytes is encoded. To ensure the encoded data can be properly     printed and does not exceed any mail server's line length limit, newline characters are inserted to keep line lengths below 76 characters.

    What happens when the last sequence of data bytes to encode is not exactly 3 bytes long? If the size of the original data in bytes is not a multiple of three, we might     end up with only one or two remaining (8-bit) bytes. The solution is to add the missing bytes by using a byte value of '0' to create the final 3-byte group. Because        these artificial trailing '0's cannot be encoded using the encoding table, we introduce a 65th character: '=' to represent '0'. Naturally, this character can only     appear at the end of encoded data.